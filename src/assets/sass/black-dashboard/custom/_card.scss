.card {
  background: $background-black;
  border: 1px solid color.adjust($orange, $lightness: -15%);
  border-radius: $border-radius;
  box-shadow: 0 1px 20px 0px rgba($orange, 0.1);
  position: relative;
  width: 100%;
  margin-bottom: 30px;

  label {
    color: rgba($white, 0.6);
  }

  .card-title {
    margin-bottom: 0.75rem;
  }

  .card-body {
    padding: 1.25rem 1.5rem;

    &.table-full-width {
      padding-left: 0;
      padding-right: 0;
    }

    .card-title {
      color: $white;
      text-transform: inherit;
      font-weight: $font-weight-light;
      margin-bottom: 0.75rem;
    }

    .card-description,
    .card-category {
      color: rgba($white, 0.6);
    }
  }

  .card-header {
    background: transparent;
    border-bottom: 1px solid color.adjust($orange, $lightness: -15%);
    padding: 1.25rem 1.5rem;

    &:first-child {
      border-radius: calc(#{$border-radius} - 1px) calc(#{$border-radius} - 1px) 0 0;
    }

    .card-title {
      color: $white;
      margin-bottom: 0;
    }

    .card-category {
      color: color.adjust($orange, $lightness: 20%);
      margin-bottom: 0;
    }
  }

  .map {
    border-radius: $border-radius-sm;

    &.map-big {
      height: 420px;
    }
  }

  &.card-white {
    background: $white;

    .card-title {
      color: $black;
    }
    .card-category,
    .stats {
      color: $card-stats-gray;
    }

    //style for inputs

    @include form-control-placeholder(rgba($black, 0.4), 1);
    .has-danger {
      .form-control,
      .input-group-prepend .input-group-text {
        border-color: $danger-states;
      }
    }

    .input-group-prepend .input-group-text {
      border-color: rgba($black-states, 0.2);
      color: $black-states;
    }

    .form-control {
      color: $black;
      border-color: rgba($black-states, 0.2);
      &:focus {
        border-color: $primary;
      }
    }
    label:not(.btn) {
      color: $default;
    }

    .form-group.no-border,
    .input-group.no-border {
      .form-control,
      .form-control + .input-group-prepend .input-group-text,
      .form-control + .input-group-append .input-group-text,
      .input-group-prepend .input-group-text,
      .input-group-append .input-group-text {
        background-color: $opacity-gray-3;
        &:focus,
        &:active,
        &:active {
          background-color: $opacity-gray-5;
        }
      }

      .form-control {
        &:focus {
          & + .input-group-prepend .input-group-text,
          & + .input-group-append .input-group-text {
            background-color: $transparent-bg;
          }
        }
      }
    }

    .input-group[disabled] {
      .input-group-prepend .input-group-text,
      .input-group-append .input-group-text {
        background-color: $black;
      }
    }

    .form-control[disabled],
    .form-control[readonly],
    fieldset[disabled] .form-control {
      background: $light-gray;
      border-color: rgba($black-states, 0.3);
    }

    .input-group-focus {
      .input-group-prepend .input-group-text,
      .input-group-append .input-group-text,
      .form-control {
        background-color: $white;
        border-color: $primary;
      }

      &.no-border {
        .input-group-prepend .input-group-text,
        .input-group-append .input-group-text {
          background-color: $opacity-gray-5;
        }
      }
    }
    .input-group-prepend .input-group-text {
      border-right: none;
    }

    .input-group-append .input-group-text {
      border-left: none;
    }

    .has-danger .form-control:focus,
    .has-success.input-group-focus .input-group-append .input-group-text,
    .has-success.input-group-focus .input-group-prepend .input-group-text {
      border-color: $danger-states;
    }

    .has-success .form-control:focus,
    .has-success.input-group-focus .input-group-append .input-group-text,
    .has-success.input-group-focus .input-group-prepend .input-group-text {
      border-color: color.adjust($success, $lightness: -10%);
    }
  }

  &.card-plain {
    background: transparent;
    border: none;
    box-shadow: none;
  }

  .image {
    overflow: hidden;
    height: 200px;
    position: relative;
  }

  .avatar {
    width: 30px;
    height: 30px;
    overflow: hidden;
    border-radius: 50%;
    margin-bottom: 15px;
  }

  label {
    font-size: $font-size-sm;
    margin-bottom: 5px;
  }

  .card-footer {
    background: transparent;
    border-top: 1px solid color.adjust($orange, $lightness: -15%);
    padding: 1rem 1.5rem;

    .stats {
      i {
        margin-right: 5px;
        position: relative;
      }
    }

    h6 {
      margin-bottom: 0;
      padding: 7px 0;
    }
  }

  // Card types
  &[data-background-color="orange"] {
    background: $orange;
    
    .card-header {
      background: color.adjust($orange, $lightness: -10%);
      border-bottom: none;
    }
    
    .card-footer {
      background: color.adjust($orange, $lightness: -10%);
      border-top: none;
    }
  }

  &[data-background-color="black"] {
    background: $background-black;
  }

  // Card with hover effect
  &.card-hover {
    transition: transform 0.2s, box-shadow 0.2s;

    &:hover {
      transform: translateY(-5px);
      box-shadow: 0 5px 25px 0px rgba($orange, 0.2);
    }
  }
}

.card-body {
  padding: $card-spacer-y;
}

@include media-breakpoint-down(sm) {
  .card.card-chart .card-header {
    .btn-group-toggle .tim-icons {
      font-size: 0.875rem;
      top: -1px;
    }
  }
}
